package com.luckyrui.platform.chartroom.client;import java.io.IOException;import java.nio.channels.SocketChannel;import java.util.List;import com.alibaba.fastjson.JSONArray;import com.luckyrui.platform.chartroom.bean.ClientBean;import com.luckyrui.platform.chartroom.client.frame.ClientFrame;import com.luckyrui.platform.constants.Constants;import com.sun.corba.se.impl.orbutil.closure.Constant;public class ChartRoomClient extends NioClient{		ClientFrame cf;		@Override	protected void serverClose(SocketChannel client) throws IOException {			}	@Override	protected void receiveMsg(SocketChannel client, String receiveMsg)			throws IOException {		System.out.println("receiveMsg -->"+receiveMsg);		if(null!=receiveMsg&&receiveMsg.startsWith(Constants.MSG_FN_ID)){			receiveFnMsg(receiveMsg);		}else{			cf.receiveMsg(receiveMsg);		}	}		/**	 * 接收到功能性消息	 * @param receiveMsg	 */	private void receiveFnMsg(String receiveMsg) {		if(receiveMsg.contains(Constants.MSG_FN_GET_USER)){			String _msg = receiveMsg.substring(receiveMsg.indexOf(Constants.MSG_FN_GET_USER)+Constants.MSG_FN_GET_USER.length());			getUsers(_msg);		}			}	public void setClientFrame(ClientFrame cf){		this.cf = cf;	}	public void getUsers(String msg) {		JSONArray users = JSONArray.parseArray(msg);		this.cf.showUsers(users);	}}